@page "/projects"
@inject NavigationManager navManager
@inject IProjectsRepository projectsRepository
@inject IJSRuntime JSRuntime

<div class="projects-title">
    <h3>Projects</h3>
</div>
<div class="projects-toolbar">
    <button class="btn btn-primary"
            @onclick="CreateNew">
        + New
    </button>
</div>
<div class="projects-container">

    @if (projects != null)
    {
        @foreach (var project in projects)
        {
            <div class="project-item"
                 @onclick="() => OpenProject(project.ID)">
                <div class="project-image">
                    <img src="@project.Thumbnail" style="height: 100%;" alt="" />
                </div>
                <div class="project-text">
                    @project.Title (#@project.ID)
                </div>

                @if (project.ID > 0)
                {
                    <button class="project-delete-container"
                            @onclick="() => DeleteProject(project)"
                            @onclick:preventDefault="true"
                            @onclick:stopPropagation="true">
                        <div class="oi oi-trash" style="color: red; width: 20px; height: 20px;"></div>
                    </button>
                }
            </div>
        }
    }
</div>
<div style="height: 3rem">

</div>
@code {
    private List<Project> projects;

    protected override async Task OnInitializedAsync()
    {
        projects = await projectsRepository.GetProjects();
        await base.OnInitializedAsync();
    }

    private void OpenProject(int id)
    {
        if (id == ExampleProject.ExampleProjectID)
            navManager.NavigateTo("editor/example");
        else
            navManager.NavigateTo($"editor/{id}");
    }

    private async Task CreateNew()
    {
        var project = await projectsRepository.Create();
        //navManager.NavigateTo($"projects/{project.ID}");
        navManager.NavigateTo($"editor/{project.ID}");
    }

    private async Task DeleteProject(Project project)
    {
        var confirm = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete the project?");
        if (confirm)
        {
            await projectsRepository.DeleteProject(project.ID);
            projects.Remove(project);
        }
    }
}
